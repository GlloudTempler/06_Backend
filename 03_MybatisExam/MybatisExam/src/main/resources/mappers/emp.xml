<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- OFFSET(데이터 건더뛰기) #{현재 페이지 수} * #{한 페이지의 정보 수} => 만큼 건너 뜀 -->
<mapper namespace="com.example.mybatisexam.dao.EmpDao">

    <select id="findByEnameContaining" parameterType="PageReq" resultType="Emp">
        SELECT ENO,
               ENAME,
               JOB,
               MANAGER,
               HIREDATE,
               SALARY,
               COMMISSION,
               DNO
        <include refid="common.selectCol"></include>
        FROM TB_EMP
        WHERE ENAME LIKE '%' || #{ename} || '%'
        OFFSET #{pageReq.page} * #{pageReq.size} ROWS FETCH FIRST #{pageReq.size} ROWS ONLY
    </select>

    <select id="countByEname" parameterType="String" resultType="long">
        SELECT COUNT(eno)
        FROM TB_EMP
        WHERE ENAME LIKE '%' || #{ename} || '%'
    </select>
    
    <select id="findByID" parameterType="int" resultType="Emp">
        SELECT ENO,
               ENAME,
               JOB,
               MANAGER,
               HIREDATE,
               SALARY,
               COMMISSION,
               DNO
        <include refid="common.selectCol"></include>
        FROM TB_EMP
        WHERE ENO = #{eno}
    </select>

    <insert id="insert" parameterType="Emp">
        INSERT INTO TB_EMP(
                           ENO,
                           ENAME,
                           JOB,
                           MANAGER,
                           HIREDATE,
                           SALARY,
                           COMMISSION,
                           DNO,
                           INSERT_TIME)
        VALUES (
                SQ_EMP.NEXTVAL,
                #{ename},
                #{job},
                #{manager},
                #{hiredate},
                #{salary},
                #{commission},
                #{dno},
                #{insertTime}
               )
    </insert>

    <update id="update" parameterType="Emp">
        UPDATE TB_EMP
        SET
            ENAME = #{ename},
            JOB = #{job},
            MANAGER = #{manager},
            HIREDATE = #{hiredate},
            SALARY = #{salary},
            COMMISSION = #{commission},
            DNO = #{dno},
            UPDATE_TIME = #{updateTime}
        WHERE DNO = #{dno}
    </update>

    <delete id="deleteByID" parameterType="int">
        DELETE FROM TB_EMP
        WHERE ENO = #{eno}
    </delete>

    <select id="existByID" parameterType="int" resultType="long">
        SELECT COUNT(eno)
        FROM TB_EMP
        WHERE ENO = #{eno}
    </select>

    <!-- TODO : dynamic select func -->
    <select id="findByDynamicContaining" parameterType="PageReq" resultType="Emp">
        SELECT ENO,
               ENAME,
               JOB,
               MANAGER,
               HIREDATE,
               SALARY,
               COMMISSION,
               DNO
        <include refid="common.selectCol"></include>
        FROM TB_EMP
        WHERE 1=1
        <if test="ename != ''">
            AND ENAME LIKE '%' || #{ename} || '%'
        </if>
        <if test="job != ''">
            AND JOB LIKE '%' || #{job} || '%'
        </if>
        <if test="manager != 0">
            AND MANAMGER LIKE '%' || #{manager} || '%'
        </if>
        OFFSET #{pageReq.page} * #{pageReq.size} ROWS FETCH FIRST #{pageReq.size} ROWS ONLY
    </select>

    <select id="countByDynamic" parameterType="String" resultType="long">
        SELECT COUNT(eno)
        FROM TB_EMP
        WHERE 1=1
        <if test="ename != ''">
            AND ENAME LIKE '%' || #{ename} || '%'
        </if>
        <if test="job !=''">
            AND JOB LOKE '%' || #{job} || '%'
        </if>
        <if test="manager != 0">
            AND MANAMGER LIKE '%' || #{manager} || '%'
        </if>
    </select>
</mapper>